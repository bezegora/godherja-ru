namespace = marcher_political

##################################################

### Marcher Political Events

# 0001 - Chevalie Collapses

##################################################

##################################################
# Chevalie Collapses
# by Hapchazzard
##################################################

marcher_political.0001 = {
	title = marcher_political.0001.t
	desc = marcher_political.0001.desc
	theme = war
	
	left_portrait = {
		character = root
		triggered_animation = {
			trigger = {
				root = {
					OR = {
						has_trait = vengeful
						has_trait = sadistic
						has_trait = callous
					}
				}
			}
			animation = personality_vengeful
		}
		triggered_animation = {
			trigger = {
				root = {
					ai_boldness < 100
					NOR = {
						has_trait = vengeful
						has_trait = sadistic
						has_trait = callous
					}
				}
			}
			animation = worry
		}
		triggered_animation = {
			trigger = {
				root = {
					ai_boldness >= 100
					NOR = {
						has_trait = vengeful
						has_trait = sadistic
						has_trait = callous
					}
				}
			}
			animation = personality_bold
		}
	}
	
	right_portrait = {
		character = scope:previous_chevalie_ruler
		animation = idle
	}
	
	override_background = { event_background = throne_room }
	
	immediate = {
		every_sibling = { trigger_event = marcher_political.0002 }
		#every_vassal = {
		#	limit = { is_powerful_vassal_of = root }
		#	trigger_event = marcher_political.0003
		#}
	}
	
	option = {	# Fight for the throne
		name = {
			trigger = { 
				OR = {
					has_trait = vengeful
					has_trait = sadistic
					has_trait = callous
				}
			}
			text = marcher_political.0001.a.evil
		}
		name = {
			trigger = { always = yes }
			text = marcher_political.0001.a
		}
		title:e_chevalie = {
			add_to_variable_list = {
				name = original_pretenders
				target = root
			}
			add_to_variable_list = {
				name = active_pretenders
				target = root
			}
		}
		custom_tooltip = will_be_pretender_tt
	}
	
	option = {	# Sit it out
		name = marcher_political.0001.b
		custom_tooltip = will_sit_it_out_tt
	}
	
	after = {
		trigger_event = {
			id = marcher_political.004
			days = 1
		}
	}
}

marcher_political.0002 = {
	title = marcher_political.0002.t
	desc = marcher_political.0002.desc
	
	option = {	# Fight for the throne
		name = marcher_political.0002.a
		title:e_chevalie = {
			add_to_variable_list = {
				name = original_pretenders
				target = root
			}
			add_to_variable_list = {
				name = active_pretenders
				target = root
			}
		}
	}
	
	option = {	# Sit it out
		name = marcher_political.0001.b
	}
}

marcher_political.0003 = {
	title = marcher_political.0003.t
	desc = marcher_political.0003.desc
	
	option = {	# Fight for the throne
		name = marcher_political.0003.a
		add_pressed_claim = title:e_chevalie
		title:e_chevalie = {
			add_to_variable_list = {
				name = original_pretenders
				target = root
			}
			add_to_variable_list = {
				name = active_pretenders
				target = root
			}
		}
	}
	
	option = {	# Sit it out
		name = marcher_political.0001.b
	}
}

marcher_political.0004 = {
	title = marcher_political.0004.t
	desc = marcher_political.0004.desc
	theme = war
	
	left_portrait = {
		character = root
		triggered_animation = {
			trigger = {
				root = {
					OR = {
						has_trait = vengeful
						has_trait = sadistic
						has_trait = callous
					}
				}
			}
			animation = personality_vengeful
		}
		triggered_animation = {
			trigger = {
				root = {
					ai_boldness < 100
					NOR = {
						has_trait = vengeful
						has_trait = sadistic
						has_trait = callous
					}
				}
			}
			animation = worry
		}
		triggered_animation = {
			trigger = {
				root = {
					ai_boldness >= 100
					NOR = {
						has_trait = vengeful
						has_trait = sadistic
						has_trait = callous
					}
				}
			}
			animation = personality_bold
		}
	}
	
	right_portrait = {
		character = scope:first_pretender
		triggered_animation = {
			trigger = {
				scope:first_pretender = {
					ai_boldness >= 100
				}
			}
			animation = personality_bold
		}
		triggered_animation = {
			trigger = {
				scope:first_pretender = {
					ai_honor <= -100
				}
			}
			animation = personality_dishonorable
		}
		triggered_animation = {
			trigger = {
				always = yes
			}
			animation = personality_greedy
		}
	}
	
	override_background = { event_background = throne_room }
	
	immediate = {
		title:e_chevalie = {
			every_in_list = {
				variable = original_pretenders
				add_to_list = pretenders
			}
			every_in_de_jure_hierarchy = {
				limit = { 
					tier = tier_kingdom
					NOR = { 
						this = title:k_ziemojycz
						this = title:k_dielec
						this = title:k_vascanein
					}
				}
				add_to_list = potential_pretender_kingdoms
			}
		}
		random_in_list = {
			list = pretenders
			limit = { NOT = { this = root } }
			save_scope_as = first_pretender
		}
		title:e_chevalie = {
			if = {
				limit = {
					variable_list_size = {
						name = active_pretenders
						value = 0
					}
				}
				root = { destroy_title = title:e_chevalie }
			}
			else_if = {
				limit = {
					variable_list_size = {
						name = active_pretenders
						value > 1
					}
				}
				root = { destroy_title = title:e_chevalie }
				if = {
					limit = { root = { is_in_list = pretenders } }
					root = {
						add_character_flag = already_received_pretender_realm
						capital_county = {
							kingdom = {
								remove_from_list = potential_pretender_kingdoms
								if = {
									limit = { NOT = { holder = root } }
									root = { get_title = prev }
								}
							}
						}
					}
				}
				every_in_list = {
					list = potential_pretender_kingdoms
					if = {
						limit = {
							trigger_if = {
								limit = { is_title_created = yes }
								holder = { 
									is_in_list = pretenders
									NOT = { has_character_flag = already_received_pretender_realm }
								}
							}
							trigger_else = { always = no }
						}
						holder = {
							add_character_flag = {
								flag = already_received_pretender_realm
								days = 10
							}
						}
						remove_from_list = potential_pretender_kingdoms
					}
					else_if = {
						limit = {
							trigger_if = {
								limit = { is_title_created = yes }
								holder = { 
									NOT = { is_in_list = pretenders }
								}
							}
							trigger_else = { always = no }
						}
						add_to_list = kingdom_held_by_non_pretender
					}
					else_if = {
						limit = {
							OR = {
								is_title_created = no
								holder = { has_character_flag = already_received_pretender_realm }
							}
						}
						save_temporary_scope_as = potential_pretender_kingdom
						every_in_de_jure_hierarchy = {
							limit = { 
								tier = tier_county
								holder = {
									is_in_list = pretenders
									NOR = {
										has_character_flag = already_received_pretender_realm
										scope:potential_pretender_kingdom = { 
											any_in_list = {
												variable = pretenders_contending_for_kingdom
												this = prev
											}
										}
									}
								}
							}
							holder = {
								scope:potential_pretender_kingdom = {
									add_to_variable_list = {
										name = pretenders_contending_for_kingdom
										target = prev
									}
								}
							}
						}
						if = {
							limit = {
								variable_list_size = {
									name = pretenders_contending_for_kingdom
									value = 1
								}
							}
							random_in_list = {
								variable = pretenders_contending_for_kingdom
								get_title = prev
							}
							clear_variable_list = pretenders_contending_for_kingdom
							remove_from_list = potential_pretender_kingdoms
						}
					}
				}
				every_in_list = {
					list = pretenders
					limit = { NOT = { has_character_flag = already_received_pretender_realm } }
					save_temporary_scope_as = pretender
					random_in_list = {
						list = potential_pretender_kingdoms
						random_in_de_jure_hierarchy = {
							limit = { tier = tier_county }
							scope:pretender = { get_title = prev } 
						}
						scope:pretender = { 
							get_title = prev 
							add_character_flag = already_received_pretender_realm
						}
						remove_from_list = potential_pretender_kingdoms
					}
				}
				every_in_list = {
					list = potential_pretender_kingdoms
					limit = { NOT = { is_in_list = kingdom_held_by_non_pretender } }
					root = { destroy_title = prev }
				}
			}
		}
		hidden_effect = {
			every_vassal = {
				limit = {
					OR = {
						is_in_list = pretenders
						NOT = { 
							root.primary_title = {
								is_de_jure_liege_or_above_target = prev.primary_title
							}
						}
					}
				}
				create_title_and_vassal_change = {
					type = independency
					save_scope_as = change
					add_claim_on_loss = yes
				}
				becomes_independent = {
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
				scope:war = {
					add_defender = prev
				}
			}
			every_in_list = {
				list = pretenders
				limit = {
					is_landed = yes
					highest_held_title_tier <= tier_duchy
				}
				capital_county = { save_scope_as = capital }
				create_dynamic_title = {
					tier = kingdom
					name = GENERATED_DUCHY_NAME
				}
				create_title_and_vassal_change = {
					type = created
					save_scope_as = change
					add_claim_on_loss = no
				}
				scope:new_title = {
					set_destroy_if_invalid_heir = yes
					set_no_automatic_claims = yes
					set_definitive_form = yes
					set_always_follows_primary_heir = yes
					change_title_holder = {
						holder = prev
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
				scope:new_title = {
					generate_coa = yes
				}
			}
			title:e_chevalie = {
				every_in_de_jure_hierarchy = {
					limit = { tier = tier_county }
					holder = {
						if = {
							limit = { 
								highest_held_title_tier <= tier_duchy
								is_independent_ruler = yes
								primary_title.kingdom = { is_title_created = yes }
							}
							primary_title.kingdom = { holder = { save_temporary_scope_as = new_liege } }
							create_title_and_vassal_change = {
								type = swear_fealty
								save_scope_as = title_change
								add_claim_on_loss = no
							}
							change_liege = {
								liege = scope:new_liege
								change = scope:title_change
							}
							resolve_title_and_vassal_change = scope:title_change
						}
					}
				}
			}
			every_in_list = {
				list = pretenders
				limit = { is_landed = yes }
				add_character_modifier = piece_of_the_broken_crown_modifier
			}
		}
	}
	
	option = {
		name = {
			trigger = { 
				OR = {
					has_trait = vengeful
					has_trait = sadistic
					has_trait = callous
				}
			}
			text = marcher_political.0004.a.evil
		}
		name = {
			trigger = { always = yes }
			text = marcher_political.0004.a
		}
	}
}