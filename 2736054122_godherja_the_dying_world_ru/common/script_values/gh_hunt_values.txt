###############
# HUNT VALUES #
###############

# Distances to target hunting site
long_hunt_max_length = 10000000 # 10M
medium_hunt_max_length = 5000000 # 1M, slightly larger than 1 'holy roman empire' away
short_hunt_max_length = 1000000 # 100K, slightly larger than 1 'ireland' away.

hunt_cooldown_value = {
	value = 24
	if = {
		limit = { has_trait = lifestyle_hunter }
		multiply = 0.25
	}
}

# Tracking Power
tracking_power = {
	value = 1	# Everyone has a base of at least 1
	if = {	# Each hunter trait gives an exponentially better output
		limit = { has_trait = hunter_1 }
		add = 0.5
	}
	if = {
		limit = { has_trait = hunter_2 }
		add = 1
	}
	if = {
		limit = { has_trait = hunter_3 }
		add = 2
	}
	if = {
		limit = { has_trait = hunter_4 }
		add = 4
	}
	if = {
		limit = { has_trait = hunter_5 }
		add = 8
	}
	if = {	# Scaled by the Adept Tracker perk
		limit = { has_perk = adept_tracker_perk }
		add = 2
	}
	add = {	# Scaled by learning
		value = learning
		multiply = 0.1
	}
	if = {	# Brave won't hesitate to follow the most direct, risky trail
		limit = { has_trait = brave }
		multiply = 1.25
	}
	if = {	# Craven will be much slower, with the benefit of being less likely to get into trouble
		limit = { has_trait = craven }
		multiply = 0.75
	}
	if = {	# Diligent will be more thorough
		limit = { has_trait = diligent }
		multiply = 1.25
	}
	if = {	# Lazy will half ass it
		limit = { has_trait = lazy }
		multiply = 0.75
	}
	if = {	# Stubborn will be decisive
		limit = { has_trait = stubborn }
		multiply = 1.25
	}
	if = {	# Fickle will be indecisive
		limit = { has_trait = fickle }
		multiply = 0.75
	}
	if = {	# Impatient will be decisive
		limit = { has_trait = impatient }
		multiply = 1.25
	}
	if = {	# Patient won't rush things
		limit = { has_trait = patient }
		multiply = 0.75
	}
	if = {	# Scaled by intelligence
		limit = { has_trait = intellect_bad_3 }
		multiply = 0.1
	}
	if = {
		limit = { has_trait = intellect_bad_2 }
		multiply = 0.5
	}
	if = {
		limit = { has_trait = intellect_bad_1 }
		multiply = 0.75
	}
	if = {
		limit = { has_trait = intellect_good_1 }
		multiply = 1.25
	}
	if = {
		limit = { has_trait = intellect_good_2 }
		multiply = 1.5
	}
	if = {
		limit = { has_trait = intellect_good_3 }
		multiply = 2
	}
	if = {	# Scaled by shrewdness and dullness
		limit = { has_trait = dull }
		multiply = 0.75
	}
	if = {
		limit = { has_trait = shrewd }
		multiply = 1.25
	}
	if = {	# Scaled by home turf advantage
		limit = { 
			exists = scope:hunting_in_home_biozone
			has_perk = home_turf_perk
		}
		multiply = 2
	}
}

hunting_death_chance = {
	value = 0
	if = {	# If only slightly below fine, only apply linear, relatively small penalties
		limit = {
			health < 3
			health >= 2
		}
		add = {	# 20% chance of dying once hitting only 2 health
			value = 3
			subtract = health
			multiply = 20
		}
	}
	else_if = {	# If only significantly below fine, start applying increasing penalties
		limit = {
			health < 2
			health >= 1
		}
		add = 20
		add = {	# 50% chance of dying once hitting only 1 health
			value = 2
			subtract = health
			multiply = 30
		}
	}
	else_if = {	# If dying, massively increase penalties
		limit = {
			health < 1
		}
		add = 50
		add = {	# 100% chance of dying once hitting 0 health
			value = 1
			subtract = health
			multiply = 50
		}
	}
}

hunting_chance_of_getting_lost = {
	value = 1
	if = {	# Needs to be a labyrinthine zone to be inherently risky
		limit = { exists = scope:labyrinthine }
		add = 20
	}
	if = {	# If you have no experience with the great outdoors, there's a reasonable chance of getting lost
		limit = { NOT = { has_trait = lifestyle_hunter } }
		add = 20
	}
	if = {	# If you're already lost, the more lost you are, the easier it is to get unlost. Goes up to 30
		limit = { root = { has_variable = lost_level } }
		add = {
			value = root.var:lost_level
			multiply = -5
		}
	}
	if = {	# If you're injured or in bad health in general, it becomes harder to focus and easier to panic
		limit = { health < 3 }
		add = {
			value = 3
			subtract = health
			multiply = 10
		}
	}
	if = {	# Weighted by negative intelligence
		limit = { has_trait = intellect_bad_3 }
		add = 30
	}
	if = {
		limit = { has_trait = intellect_bad_2 }
		add = 20
	}
	if = {
		limit = { has_trait = intellect_bad_1 }
		add = 10
	}
	if = {	# Increased by being dull
		limit = { has_trait = dull }
		add = 10
	}
	if = {	# Increased by being fickle
		limit = { has_trait = fickle }
		add = 10
	}
	if = {	# Increased by being stubborn if already lost
		limit = { 
			has_trait = stubborn
			trigger_if = {
				limit = { has_variable = lost_level }
				lost_level > 0
			}
			trigger_else = { always = no }
		}
		add = 20
	}
	if = {	# Increased by being arrogant and not being a hunter or already being lost
		limit = { 
			has_trait = arrogant
			OR = {
				NOT = { has_trait = lifestyle_hunter }
				trigger_if = {
					limit = { has_variable = lost_level }
					lost_level > 0
				}
				trigger_else = { always = no }
			}
		}
		add = 10
	}
	if = {	# Increased by being impatient
		limit = { has_trait = impatient }
		add = 10
	}
	if = {	# Increased by being insane
		limit = { has_trait = lunatic_1 }
		add = 10
	}
	if = {	# Increased by being a drunk
		limit = { has_trait = drunkard }
		add = 10
	}
	if = {	# Halved in home biozone
		limit = { exists = scope:hunting_in_home_biozone }
		multiply = 0.5
	}
}

hunting_chance_of_regaining_bearings = {
	value = 0
	if = {	# Scaled by hunting skill. Level 1 intentionally doesn't get a bonus since it instead cancels the 20 increased chance to actually getting lost.
		limit = { has_trait = hunter_2 }
		add = 5
	}
	if = {
		limit = { has_trait = hunter_3 }
		add = 10
	}
	if = {
		limit = { has_trait = hunter_4 }
		add = 20
	}
	if = {	# Completely annuls chance of getting lost even in labyrinthine zones
		limit = { has_trait = hunter_5 }
		add = 30
	}
	if = {	# Weighted by positive intelligence
		limit = { has_trait = intellect_good_1 }
		add = 10
	}
	if = {
		limit = { has_trait = intellect_good_2 }
		add = 15
	}
	if = {
		limit = { has_trait = intellect_good_3 }
		add = 20
	}
	if = {	# Increased by being shrewd
		limit = { has_trait = shrewd }
		add = 10
	}
	if = {	# Increased by being patient
		limit = { has_trait = patient }
		add = 10
	}
}

hunting_forage_success_chance = {
	value = 5	# Small inherent chance by default
	if = {	# Verdant and idyllic zones have abundant forage
		limit = { 
			OR = {
				exists = scope:verdant
				exists = scope:idyllic
			}
		}
		add = 20
	}
	if = {	# Scaled by hunting skill
		limit = { has_trait = hunter_2 }
		add = 5
	}
	if = {
		limit = { has_trait = hunter_3 }
		add = 10
	}
	if = {
		limit = { has_trait = hunter_4 }
		add = 20
	}
	if = {
		limit = { has_trait = hunter_5 }
		add = 30
	}
	add = {	# Knowing what you can actually forage for helps
		value = learning
		multiply = 0.5
	}
	if = {	# Slightly increased by being patient
		limit = { has_trait = patient }
		add = 5
	}
}

hunting_injury_chance = {
	value = 1	# Always a small chance
	if = {	# Challenging Terrain makes it higher
		limit = { exists = scope:challenging_terrain }
		add = 10
	}
	if = {	# Poisonous wildlife makes it slightly higher
		limit = { exists = scope:poisonous_wildlife }
		add = 5
	}
	if = {	# If you're lost, stacking higher chances
		limit = { root = { has_variable = lost_level } }
		add = {
			value = root.var:lost_level
			multiply = 10
		}
	}
	if = {	# Weighted by negative intelligence
		limit = { has_trait = intellect_bad_3 }
		add = 30
	}
	if = {
		limit = { has_trait = intellect_bad_2 }
		add = 20
	}
	if = {
		limit = { has_trait = intellect_bad_1 }
		add = 10
	}
	if = {	# Increased by being dull
		limit = { has_trait = dull }
		add = 10
	}
	if = {	# Increased by being brave
		limit = { has_trait = brave }
		add = 10
	}
	if = {	# Increased by being impatient
		limit = { has_trait = impatient }
		add = 10
	}
	if = {	# Increased by being insane
		limit = { has_trait = lunatic_1 }
		add = 10
	}
	if = {	# Increased by being a drunk
		limit = { has_trait = drunkard }
		add = 10
	}
	
	if = {	# Slashed by positive intelligence
		limit = { has_trait = intellect_good_3 }
		multiply = 0.5
	}
	if = {
		limit = { has_trait = intellect_good_2 }
		multiply = 0.7
	}
	if = {
		limit = { has_trait = intellect_good_1 }
		multiply = 0.9
	}
	
	if = {	# Slashed by being a good hunter
		limit = { has_trait = hunter_1 }
		multiply = 0.9
	}
	if = {
		limit = { has_trait = hunter_2 }
		multiply = 0.75
	}
	if = {
		limit = { has_trait = hunter_3 }
		multiply = 0.6
	}
	if = {
		limit = { has_trait = hunter_4 }
		multiply = 0.45
	}
	if = {
		limit = { has_trait = hunter_5 }
		multiply = 0.3
	}
}

moon_phase_factor = {
	value = 0.5
	if = {
		limit = {
			exists = global_var:current_moon_phase
			global_var:current_moon_phase = {
				has_variable = aervalr_strength
			}
		}
		add = {
			value = global_var:current_moon_phase.var:aervalr_strength
			multiply = 0.01
		}
	}
}

hunting_quest_reward_gold_value = {
	value = 0
	if = {
		limit = { exists = var:quest_tier }
		if = {
			limit = { var:quest_tier = flag:mundane }
			add = tiny_gold_min_value
		}
		else_if = {
			limit = { var:quest_tier = flag:low }
			add = minor_gold_min_value
		}
		else_if = {
			limit = { var:quest_tier = flag:medium }
			add = medium_gold_min_value
		}
		else_if = {
			limit = { var:quest_tier = flag:high }
			add = massive_gold_min_value
		}
	}
	if = {
		limit = { has_focus = adventure_fortune_focus }
		multiply = 1.3
	}
	if = {
		limit = { exists = local_var:travel_costs }
		add = local_var:travel_costs
	}
}

#################################
# SPECIFIC GAME PRESTIGE VALUES #
#################################

vampire_prestige_value = {
	value = scope:vampire.prowess
	multiply = 20
}

werewolf_prestige_value = {
	value = major_prestige_value
	if = {
		limit = {
			exists = global_var:current_moon_phase
			global_var:current_moon_phase = {
				has_variable = aervalr_strength
			}
		}
		multiply = {
			value = 0.5
			add = {
				value = global_var:current_moon_phase.var:aervalr_strength
				multiply = 0.01
			}
		}
	}
}