

# casting a deadly spell secretly
magic_unknown_murder_effect = {
	$VICTIM$ = {
		#Killed by murder: set this up first to keep the killer hidden.
		death = {
			killer = $CASTER$
			death_reason = $REASON$
		}
	}
	$CASTER$ = {
		if = {
			limit = { is_alive = yes }
			hidden_effect = {
				add_secret = {
					type = secret_magic_murder
					target = $VICTIM$
				}
			}
		}
	}
}

# casting a deadly spell "publicly"
magic_known_murder_effect = {
	$VICTIM$ = {
		death = {
			death_reason = death_magic_targeted_spell
			killer = $CASTER$
		}
		hidden_effect = { set_killer_public = yes }
	}
	$CASTER$ = {
		hidden_effect = {
			add_secret = {
				type = secret_magic_murder
				target = $VICTIM$
			}
			random_secret = {
				limit = {
					secret_type = secret_magic_murder
					secret_target = $VICTIM$
				}

				set_variable = {
					name = known_murder
					value = yes
				}

				expose_secret = $EXPOSER$
			}
		}
	}
	show_as_tooltip = {
		murder_consequences_known_or_exposed_effect = {
			MURDERER = $CASTER$
			VICTIM = $VICTIM$
			POV = root
		}
	}
}

# casting a harmful spell secretly
magic_unknown_harm_effect = {
	$CASTER$ = {
		if = {
			limit = { is_alive = yes }
			hidden_effect = {
				add_secret = {
					type = secret_magic_harm
					target = $VICTIM$
				}
			}
		}
	}
}

# casting a harmful spell "publicly"
magic_known_harm_effect = {
	attempted_murder_opinion_effect = { MURDERER = $CASTER$ VICTIM = $VICTIM$ }
}

# this is called from an event invoked by on_expose for magic murder secrets
magic_secret_exposed_owner_effects_effect = {
	$SECRET$ = {
		if = {
			limit = { #Checks to make sure the right target gets saved. Confusion might arise from the secret's "on_expose" effect since it sends the same event (secrets.0008) for both target and owner.
				exists = secret_target
				exists = scope:target
				scope:target = secret_owner
				NOT = { secret_owner = $POV$ } #To not mess up tooltips (in e.g. secrets.0108)
			}
			secret_owner = { save_scope_as = exposed_secret_target }
		}
		else_if = {
			limit = {
				exists = secret_target
			}
			secret_target = { save_scope_as = exposed_secret_target }
		}
	}

	# Magical harm
	if = {
		limit = { $SECRET$ = { secret_type = secret_magic_harm } }

		#Hide this for everyone else
		if = {
			limit = { root = scope:murderer }
			add_dread = 10
			attempted_murder_opinion_effect = { VICTIM = scope:victim MURDERER = scope:murderer }
		}
	}
	# Magical murder
	else_if = {
		limit = { $SECRET$ = { secret_type = secret_magic_murder } }

		#Traits, (crime) opinions, dread
		murder_consequences_known_or_exposed_effect = { MURDERER = scope:murderer VICTIM = scope:victim POV = $POV$ }
	}
}

