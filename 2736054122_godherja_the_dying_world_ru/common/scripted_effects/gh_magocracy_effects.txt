exclude_non_magi_heirs = {
	every_close_family_member = {
		limit = {
			can_access_magic_including_children = no
		}
		add_trait = gh_temporarily_disinherited
		trigger_event = {
			id = magocracy.0002
			days = 2
		}
	}
	set_variable = {
		name = no_infinite_disinheritances
		value = 0
	}
	while = {
		limit = {
			var:no_infinite_disinheritances < 8
			primary_heir = {
				can_access_magic_including_children = no
				NOT = { this = root.liege }
				exists = this
			}
		}
		primary_heir = {
			add_trait = gh_temporarily_disinherited
			trigger_event = {
				id = magocracy.0002
				days = 2
			}
			#every_sibling = {
			#	limit = {
			#		NOT = { this = root.liege }
			#		can_access_magic_including_children = no
			#	}
			#	add_trait = gh_temporarily_disinherited
			#	trigger_event = {
			#		id = magocracy.0002
			#		days = 2
			#	}
			#}
		}
		change_variable = {
			name = no_infinite_disinheritances
			add = 1
		}
	}
	if = {
		limit = {
			is_independent_ruler = yes
			NOT = {
				primary_heir = {
					can_access_magic_including_children = yes
				}
			}
		}
		generate_proficient_mage = yes
		save_scope_as = previous_holder
		every_held_title = {
			add_to_list = target_titles
		}
		create_title_and_vassal_change = {
			type = conquest_claim
			save_scope_as = change
			add_claim_on_loss = no
		}
		setup_claim_cb = {
			titles = target_titles
			attacker = scope:generated_mage
			defender = scope:previous_holder
			claimant = scope:generated_mage
			change = scope:change
		}
		resolve_title_and_vassal_change = scope:change
		scope:generated_mage = {
			change_government = magocratic_government
		}
	}
}