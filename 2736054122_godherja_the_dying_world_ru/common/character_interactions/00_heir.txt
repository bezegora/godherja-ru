@designate_heir_cost = 1000
@designate_heir_cost_discounted = 100
# Set one of your children as heir



#This interaction is referenced in code! If it's renamed you have to ping a coder
designate_heir_interaction = {

	category = interaction_category_diplomacy

	desc = designate_heir_interaction_desc

	is_shown = {
		bilateral_ruin_diplomatic_block = yes
		scope:recipient = {
			is_child_of = scope:actor
		}
		scope:actor = {
			OR = {
				has_title = title:e_chevalie
				can_designate_heir_trigger = yes
			}
		}
		NOT = {
			scope:recipient = scope:actor.designated_heir
		}
	}

	is_valid_showing_failures_only = {
		scope:recipient = { is_diplomatically_available = yes }
		trigger_if = {
			limit = { 
				scope:actor = { has_realm_law = aversarian_succession_law } 
			}
			scope:actor = { prestige >= @designate_heir_cost_discounted }
		}
		trigger_else_if = {
			limit = { scope:actor = { has_government = pirate_government } }
			scope:actor = { prestige >= @designate_heir_cost_discounted }
		}
		trigger_else = {
			scope:actor = { prestige >= @designate_heir_cost }
		}
	}

	on_auto_accept = {
		scope:recipient = {
			trigger_event = char_interaction.0120
		}
	}

	on_accept = {
		scope:actor = {
			send_interface_toast = {
				title = designate_heir_interaction_notification

				left_icon = scope:actor					
				right_icon = scope:recipient

				set_designated_heir = scope:recipient
				if = {
					limit = { scope:actor = { has_realm_law = aversarian_succession_law } }
					add_prestige = { subtract = @designate_heir_cost_discounted }
				}
				else_if = {
					limit = { scope:actor = { has_government = pirate_government } }
					add_prestige = { subtract = @designate_heir_cost_discounted }
				}
				else = {
					add_prestige = { subtract = @designate_heir_cost }
				}
			}
		}
	}

	auto_accept = yes
}
