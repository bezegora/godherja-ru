namespace = fp1_scandinavian_adventurers

##################################################
# Scandinavian Adventurer Events
# by Ewan Cowhig Croft
# redone by Netgear
# 0001 - 0005
##################################################

scripted_trigger valid_gh_adventurer = {
	is_available_ai_adult = yes
	is_alive = yes
	is_ruler = no
	OR = {
		any_heir_title = { count = 0 }
		AND = {
			save_temporary_scope_as = potential
			any_heir_title = {
				place_in_line_of_succession = {
					target = scope:potential
					value >= 3
				}
			}
		}
	}
}

scripted_trigger significant_sjalvolki_presence_trigger = {
	holder = {
		OR = {
			has_culture_group = culture_group:gh_sjalvolki_group
		}
		OR = {
			AND = {
				highest_held_title_tier >= tier_duchy
				any_held_title = {
					count >= 3
					tier = tier_county
					title_province = { geographical_region = $ADV_TARGET_REGION$ }
				}
			}
		}
	}
}

scripted_trigger scattered_sjalvolki_presence_trigger = {
	holder = {
		OR = {
			has_culture_group = culture_group:gh_sjalvolki_group
		}
	}
}

scripted_trigger significant_marcher_presence_trigger = {
	holder = {
		OR = {
			has_culture_group = culture_group:gh_marcher_group
		}
		OR = {
			AND = {
				highest_held_title_tier >= tier_duchy
				any_held_title = {
					count >= 3
					tier = tier_county
					title_province = { geographical_region = $ADV_TARGET_REGION$ }
				}
			}
		}
	}
}

scripted_trigger scattered_marcher_presence_trigger = {
	holder = {
		OR = {
			has_culture_group = culture_group:gh_marcher_group
		}
	}
}

scripted_trigger valid_adventurer_target_trigger = {
	holder = {
		NOR = {
			#Filter out Sjalvolki & Marchers.
			has_culture_group = culture_group:gh_sjalvolki_group
			has_culture_group = culture_group:gh_marcher_group
			#Plus any places already being attacked.
			top_liege = {
				any_character_war = { using_cb = fp1_scandi_adventurer_conquest }
			}
			#Or which have already earnt a ceasefire with this particular adventurer. Or any of their liege
			trigger_if = {
				limit = { exists = scope:adventurer }
				OR = {
					any_truce_holder = { this = scope:adventurer }
					any_liege_or_above = { 
						any_truce_holder = { this = scope:adventurer }
					}
				}
			}
			#And finally anywhere that has earnt a little peace.
			OR = {
				has_character_modifier = fp1_reprieve_from_sa_modifier
				any_liege_or_above = { has_character_modifier = fp1_reprieve_from_sa_modifier }
			}
		}
		OR = {
			is_ai = yes
			#Filter out players, unless they're large enough to take the hit.
			AND = {
				is_ai = no
				sub_realm_size >= 8
			}
		}
	}
}

scripted_trigger valid_godherja_county_trigger = {
	#Should be simple enough, but might want to make it more complex in future.
	OR = {
		culture_group = culture_group:gh_sjalvolki_group
		culture_group = culture_group:gh_marcher_group
	}
}

scripted_trigger valid_adventurer_county_for_embark_trigger = {
	is_coastal_county = yes
}

scripted_effect scandinavian_adventurer_start_war_effect = {
	#Give the adventurer a dynamic title to tide them over.
	if = {
		limit = { 
			exists = scope:adventurer
			exists = scope:adventurer_target
		}
		create_dynamic_title = {
			tier = duchy
			name = {
				first_valid = {
					triggered_desc = {
						trigger = {
							faith = { has_doctrine = doctrine_gender_male_dominated }
						}
						desc = VIKING_ARMY_MEN_NAME
					}
					triggered_desc = {
						trigger = {
							faith = { has_doctrine = doctrine_gender_female_dominated }
						}
						desc = VIKING_ARMY_WOMEN_NAME
					}
					triggered_desc = {
						trigger = {
							faith = { has_doctrine = doctrine_gender_equal }
						}
						desc = VIKING_ARMY_NEUTRAL_NAME
					}
					#Fallback, just in case.
					desc = VIKING_ARMY_NEUTRAL_NAME
				}
			}
		}
		create_title_and_vassal_change = {
			type = created
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:new_title = {
			set_capital_county = scope:adventurer_target
			set_landless_title = yes
			set_destroy_on_succession = yes
			set_delete_on_destroy = yes
			set_no_automatic_claims = yes
			set_can_be_named_after_dynasty = no
			change_title_holder = {
				holder = scope:adventurer
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change
		scope:new_title = {
			generate_coa = yes
			set_variable = {
				name = temporary_title
				value = yes
			}
		}
		#Declare the war.
		scope:adventurer = {
			start_war = {
				casus_belli = fp1_scandi_adventurer_conquest
				target = scope:adventurer_target.holder.top_liege
				target_title = scope:adventurer_target.duchy
			}
		}
		# Setup event troops.
		scope:adventurer = {
			# Set a random spawn location.
			## Try to pick a good spot in either the Clanlands or Marchers.
			if = {
				limit = {
					OR = {
						any_county_in_region = {
							region = world_ga_clanlands
							valid_adventurer_county_for_embark_trigger = yes
						}
						any_county_in_region = {
							region = world_ga_marcher_kingdoms
							valid_adventurer_county_for_embark_trigger = yes
						}
					}
				}
				random_list = {
					1 = {
						trigger = { 
							any_county_in_region = {
								region = world_ga_clanlands
								valid_adventurer_county_for_embark_trigger = yes
							}
						}
						random_county_in_region = {
							region = world_ga_clanlands
							limit = { valid_adventurer_county_for_embark_trigger = yes }
							# Weight up according to development, so armies tend to spawn in places where more randos would congregate.
							weight = {
								modifier = {
									add = {
										value = development_level
										multiply = 10
									}
								}
							}
							save_temporary_scope_as = selected_county
						}
					}
					1 = {
						trigger = { 
							any_county_in_region = {
								region = world_ga_marcher_kingdoms
								valid_adventurer_county_for_embark_trigger = yes
							}
						}
						random_county_in_region = {
							region = world_ga_marcher_kingdoms
							limit = { valid_adventurer_county_for_embark_trigger = yes }
							# Weight up according to development, so armies tend to spawn in places where more randos would congregate.
							weight = {
								modifier = {
									add = {
										value = development_level
										multiply = 10
									}
								}
							}
							save_temporary_scope_as = selected_county
						}
					}
				}
				scope:adventurer = {
					set_variable = {
						name = random_location
						value = scope:selected_county.title_province
						days = 365
					}
				}
			}
			## Otherwise, we used our backup of Epavarion, the last Sjalvolki province left alive, because fuck Nicanoneus.
			else = {
				set_variable = {
					name = random_location
					value = title:b_ragencop.title_province
					days = 365
				}
			}
			# Work out how many event troops we should give the adventurer for a 60:40 fight.
			spawn_army = {
				levies = {
					add = {
						#Base of 400.
						add = scope:adventurer_target.holder.top_liege.max_military_strength
						#Multiply that by the realm size of the target's top_liege.
						multiply = 1.5
						#Account for allies, adding more without just nullifying them.
						scope:adventurer_target.holder.top_liege = {
							every_ally = { add = this.max_military_strength }
						}
						#Cut it off so things don't get too ridiculous.
						max = 8000
						#Make sure all adventurers have a moderately respectable force.
						min = 1000
					}
				}
				inheritable = no
				uses_supply = no
				location = scope:adventurer.var:random_location
				name = scandi_adventurer_event_troops
			}
			spawn_army = {
				men_at_arms = {
					type = light_footmen
					stacks = {
						value = 3
						multiply = scope:adventurer_target.holder.top_liege.primary_title.tier
					}
				}
				inheritable = no
				uses_supply = no
				location = scope:adventurer.var:random_location
				name = scandi_adventurer_event_troops
			}
			# Suppress startup error false-positive
			if = {
				limit = { has_variable = random_location }
				# Do nothing.
			}
		}
		# Loan a little gold in case they're in debt/to keep them going.
		scope:adventurer = { add_gold = scandinavian_adventurer_efficacy_loan_value }
	}
}

#	Pre-filter event, check to see if we should keep sending out adventurers.
fp1_scandinavian_adventurers.0001 = {
	type = empty
	hidden = yes

	trigger = {
		NOT = { has_game_rule = fp1_scandi_adventurers_off }
		OR = {
			culture:adrakamp = {
				NOT = { has_cultural_era_or_later = culture_era_early_medieval }
			}
			culture:barki = {
				NOT = { has_cultural_era_or_later = culture_era_early_medieval }
			}
			culture:caemansi = {
				NOT = { has_cultural_era_or_later = culture_era_early_medieval }
			}
			culture:curgersk = {
				NOT = { has_cultural_era_or_later = culture_era_early_medieval }
			}
			culture:daukeni = {
				NOT = { has_cultural_era_or_later = culture_era_early_medieval }
			}
			culture:fenvir = {
				NOT = { has_cultural_era_or_later = culture_era_early_medieval }
			}
			culture:greuloki = {
				NOT = { has_cultural_era_or_later = culture_era_early_medieval }
			}
			culture:irmionot = {
				NOT = { has_cultural_era_or_later = culture_era_early_medieval }
			}
			culture:mastikig = {
				NOT = { has_cultural_era_or_later = culture_era_early_medieval }
			}
			culture:tribocic = {
				NOT = { has_cultural_era_or_later = culture_era_early_medieval }
			}
			culture:vrodkin = {
				NOT = { has_cultural_era_or_later = culture_era_early_medieval }
			}
			culture:warisnik = {
				NOT = { has_cultural_era_or_later = culture_era_early_medieval }
			}
			culture:carsavisians = {
				NOT = { has_cultural_era_or_later = culture_era_high_medieval }
			}
			culture:rivarisians = {
				NOT = { has_cultural_era_or_later = culture_era_high_medieval }
			}
			culture:salisians = {
				NOT = { has_cultural_era_or_later = culture_era_high_medieval }
			}
			culture:trustians = {
				NOT = { has_cultural_era_or_later = culture_era_high_medieval }
			}
			culture:chevalies = {
				NOT = { has_cultural_era_or_later = culture_era_high_medieval }
			}
			culture:voyagen = {
				NOT = { has_cultural_era_or_later = culture_era_high_medieval }
			}
			culture:oejeynica = {
				NOT = { has_cultural_era_or_later = culture_era_high_medieval }
			}
			culture:konijkmener = {
				NOT = { has_cultural_era_or_later = culture_era_high_medieval }
			}
			culture:leegenders = {
				NOT = { has_cultural_era_or_later = culture_era_high_medieval }
			}
			culture:urdermanter = {
				NOT = { has_cultural_era_or_later = culture_era_high_medieval }
			}
			culture:envokander = {
				NOT = { has_cultural_era_or_later = culture_era_high_medieval }
			}
		}
	}

	immediate = {
		#We prefer to use actual characters, but if there aren't any, we try to generate a fallback.
		##Populate Western list backup.
		if = {
			limit = {
				NOT = {
					any_in_global_list = {
						variable = sjalvolki_adventurer_list
						count >= 1
						valid_gh_adventurer = yes
					}
				}
				any_county_in_region = {
					region = world_ga_clanlands
					valid_godherja_county_trigger = yes
				}
			}
			random_county_in_region = {
				region = world_ga_clanlands
				limit = { valid_godherja_county_trigger = yes }
				save_scope_as = adventure_county
			}
			create_character = {
				location = scope:adventure_county.title_province
				template = fp1_western_warrior_character
				save_scope_as = backup_adventurer
			}
			scope:backup_adventurer = {
				add_to_global_variable_list = {
					name = sjalvolki_adventurer_list
					target = this
				}
			}
		}
		##Populate Eastern list backup.
		if = {
			limit = {
				NOT = {
					any_in_global_list = {
						variable = marcher_adventurer_list
						count >= 1
						valid_gh_adventurer = yes
					}
				}
				any_county_in_region = {
					region = world_ga_marcher_kingdoms
					valid_godherja_county_trigger = yes
				}
			}
			random_county_in_region = {
				region = world_ga_marcher_kingdoms
				limit = { valid_godherja_county_trigger = yes }
				save_scope_as = adventure_county
			}
			create_character = {
				location = scope:adventure_county.title_province
				template = fp1_eastern_warrior_character
				save_scope_as = backup_adventurer
			}
			scope:backup_adventurer = {
				add_to_global_variable_list = {
					name = marcher_adventurer_list
					target = this
				}
			}
		}
		#Launch the adventurer spawning events.
		trigger_event = fp1_scandinavian_adventurers.0002
		trigger_event = fp1_scandinavian_adventurers.0003
		#Trigger the next wave of events.
		if = {
			limit = { has_game_rule = fp1_scandi_adventurers_apocalyptic }
			trigger_event = {
				id = fp1_scandinavian_adventurers.0001
				days = 365
			}
		}
		if = {
			limit = { has_game_rule = fp1_scandi_adventurers_frequent }
			trigger_event = {
				id = fp1_scandinavian_adventurers.0001
				days = 1825
			}
		}
		if = {
			limit = { has_game_rule = fp1_scandi_adventurers_occasional }
			trigger_event = {
				id = fp1_scandinavian_adventurers.0001
				days = 3650
			}
		}
		if = {
			limit = { has_game_rule = fp1_scandi_adventurers_rare }
			trigger_event = {
				id = fp1_scandinavian_adventurers.0001
				days = 5475
			}
		}
	}
}

#	General processing event, Sjalvolki.
fp1_scandinavian_adventurers.0002 = {
	type = empty
	hidden = yes

	trigger = {
		#At least one valid adventurer. Should always be the case, but just to be sure.
		any_in_global_list = {
			variable = sjalvolki_adventurer_list
			count >= 1
			valid_gh_adventurer = yes
		}
	}

	immediate = {
		#SORT ACTORS
		##Grab the most eligible candidate from the Sjalvolki list.
		ordered_in_global_list = {
			variable = sjalvolki_adventurer_list
			limit = { valid_gh_adventurer = yes }
			order_by = { value = scandinavian_adventurer_priority_value }
			save_scope_as = scandi_adventurer
			add_character_modifier = scandinavian_adventurer_fp1_modifier
			add_trait = adventurer
		}
		##Check through the ordered Sjalvolki targets to see if Aversaria has too few Sjalvolki in it.
		if = {
			limit = {
				NOR = {
					any_county_in_region = {
						region = world_ga_aversarian_homelands
						significant_sjalvolki_presence_trigger = { ADV_TARGET_REGION = world_ga_aversarian_homelands }
					}
					any_county_in_region = {
						region = world_ga_aversarian_homelands
						count >= 3
						scattered_sjalvolki_presence_trigger = yes
					}
				}
				any_county_in_region = {
					region = world_ga_aversarian_homelands
					valid_adventurer_target_trigger = yes
				}
			}
			every_county_in_region = {
				region = world_ga_aversarian_homelands
				limit = {
					NOT = {
						holder = { is_in_list = sjalvolki_adv_target_list }
					}
					valid_adventurer_target_trigger = yes
				}
				add_to_list = sjalvolki_adv_target_list
			}
			random_in_list = {
				list = sjalvolki_adv_target_list
				weight = {
					modifier = { add = scandinavian_adventurer_target_title_priority_value }
				}
				save_scope_as = adventurer_target
			}
		}
		#SORT WAR
		if = {
			limit = { exists = scope:adventurer_target }
			scope:adventurer = { trigger_event = fp1_scandinavian_adventurers.0005 }
		}
	}
}

#	General processing event, Marchers.
fp1_scandinavian_adventurers.0003 = {
	type = empty
	hidden = yes

	trigger = {
		#At least one valid adventurer. Should always be the case, but just to be sure.
		any_in_global_list = {
			variable = marcher_adventurer_list
			count >= 1
			valid_gh_adventurer = yes
		}
	}

	immediate = {
		#SORT ACTORS
		##Grab the most eligible candidate from the Marcher list.
		ordered_in_global_list = {
			variable = marcher_adventurer_list
			limit = { valid_gh_adventurer = yes }
			order_by = { value = scandinavian_adventurer_priority_value }
			save_scope_as = scandi_adventurer
			add_character_modifier = scandinavian_adventurer_fp1_modifier
			add_trait = adventurer
		}
		##Check through the ordered Marcher targets to see if Clanlands(after Cenware) and Sarradon has too few Marchers in it.(should always be the case)
		if = {
			limit = {
				title:e_sjalvolki = { is_title_created = no }
				NOR = {
					any_county_in_region = {
						region = world_ga_clanlands
						significant_marcher_presence_trigger = { ADV_TARGET_REGION = world_ga_clanlands }
					}
					any_county_in_region = {
						region = world_ga_clanlands
						count >= 3
						scattered_marcher_presence_trigger = yes
					}
				}
				any_county_in_region = {
					region = world_ga_clanlands
					valid_adventurer_target_trigger = yes
				}
			}
			every_county_in_region = {
				region = world_ga_clanlands
				limit = {
					NOT = {
						holder = { is_in_list = marcher_adv_target_list }
					}
					valid_adventurer_target_trigger = yes
				}
				add_to_list = marcher_adv_target_list
			}
			random_in_list = {
				list = marcher_adv_target_list
				weight = {
					modifier = { add = scandinavian_adventurer_target_title_priority_value }
				}
				save_scope_as = adventurer_target
			}
		}
		if = {
			limit = {
				NOR = {
					any_county_in_region = {
						region = world_sarradon
						significant_marcher_presence_trigger = { ADV_TARGET_REGION = world_sarradon }
					}
					any_county_in_region = {
						region = world_sarradon
						count >= 3
						scattered_marcher_presence_trigger = yes
					}
				}
				any_county_in_region = {
					region = world_sarradon
					valid_adventurer_target_trigger = yes
				}
			}
			every_county_in_region = {
				region = world_sarradon
				limit = {
					NOT = {
						holder = { is_in_list = marcher_adv_target_list }
					}
					valid_adventurer_target_trigger = yes
				}
				add_to_list = marcher_adv_target_list
			}
			random_in_list = {
				list = marcher_adv_target_list
				weight = {
					modifier = { add = scandinavian_adventurer_target_title_priority_value }
				}
				save_scope_as = adventurer_target
			}
		}
		#SORT WAR
		if = {
			limit = { exists = scope:adventurer_target }
			scope:adventurer = { trigger_event = fp1_scandinavian_adventurers.0005 }
		}
	}
}

# Startup event, delaying the initial cycle.
fp1_scandinavian_adventurers.0004 = {
	type = empty
	hidden = yes

	immediate = {
		trigger_event = {
			id = fp1_scandinavian_adventurers.0001
			years = 5
		}
	}
}

#	Start the war (separate event to config scopes correctly).
fp1_scandinavian_adventurers.0005 = {
	hidden = yes

	immediate = { scandinavian_adventurer_start_war_effect = yes }
}